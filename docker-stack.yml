version: "3.12"
services:
  grafana-loki:
    command:
    - -config.expand-env
    - -config.file=/etc/loki/grafana-loki-config.yaml
    - -common.storage.ring.store=memberlist
    - -memberlist.bind-port=7946
    - -memberlist.join=dns+tasks.grafana-loki:7946
    - -memberlist.rejoin-interval=30s
    - -memberlist.dead-node-reclaim-time=30s
    - -memberlist.abort-if-join-fails
    configs:
    - source: grafana-loki-docker-entrypoint-shim.sh
      target: /docker-entrypoint-shim.sh
      mode: 365
    - source: grafana-loki-config.yaml
      target: /etc/loki/grafana-loki-config.yaml
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.1
      rollback_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.1
      restart_policy:
        condition: any
        delay: 30s
        window: 15s
      placement:
        max_replicas_per_node: 1
    entrypoint:
    - /docker-entrypoint-shim.sh
    environment:
      GF_LOKI_ADVERTISE_INTERFACE: eth0
      GF_LOKI_COMMON_STORAGE_RING_REPLICATION_FACTOR: ${GF_LOKI_COMMON_STORAGE_RING_REPLICATION_FACTOR}
      GF_LOKI_DOCKER_STACK_NAMESPACE: '{{ index .Service.Labels "com.docker.stack.namespace"}}'
    hostname: replica-{{.Node.ID}}.grafana-loki.internal
    healthcheck:
      test:
      - CMD-SHELL
      - wget -qO - --tries=1 --spider http://127.0.0.1:3100/ready || exit 1
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 30s
    image: grafana/loki:2.9.9
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      grafana:
        aliases:
        - grafana-loki.internal
    stop_signal: SIGTERM
    volumes:
    - type: volume
      source: grafana-loki-data
      target: /loki
  grafana-loki-gateway:
    command:
    - -ec
    - caddy reverse-proxy --from=:3100 --to=replica-$${NODE_ID}.grafana-loki.internal:3100
    configs:
    - source: gf-dashboard-logstack-dockerswarm-services-logs
    - source: gf-provisioning-datasource-grafana-loki
    depends_on:
    - loki
    deploy:
      mode: global
      labels:
        io.prometheus.enabled: "true"
        io.prometheus.job_name: loki
      placement:
        constraints:
        - node.labels.services.logstack_grafana_loki == true
    entrypoint:
    - /bin/sh
    environment:
      NODE_ID: '{{.Node.ID}}'
    hostname: replica-{{.Node.ID}}.grafana-loki-gateway.local
    healthcheck:
      test:
      - CMD-SHELL
      - wget -qO - --tries=1 --spider http://127.0.0.1:3100/ready || exit 1
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 30s
    image: caddy:2.8-alpine
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      grafana:
        aliases:
        - grafana-loki-gateway.svc.cluster.local
      logstack_gwnetwork:
        aliases:
        - grafana-loki-gateway.internal
      prometheus_gwnetwork:
        aliases:
        - grafana-loki-gateway.internal
        - grafana-loki-gateway.svc.cluster.local
    ports:
    - target: 3100
      published: 3100
      protocol: tcp
  promtail:
    command:
    - -ec
    - /usr/bin/promtail -config.expand-env=true -config.file=/etc/promtail/promtail-config.yaml
      -server.enable-runtime-reload
    configs:
    - source: promtail-config.yaml
      target: /etc/promtail/promtail-config.yaml
    - source: prometheus-promtail
    deploy:
      mode: global
      labels:
        io.prometheus.dockerswarm-services.should_be_probed: "false"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.role: grafana-loki-promtail
      placement:
        max_replicas_per_node: 1
    entrypoint:
    - /bin/sh
    environment:
      PROMTAIL_CLIENT_TENANT_ID: ${PROMTAIL_CLIENT_TENANT_ID}
      PROMTAIL_CLIENT_URL: ${PROMTAIL_CLIENT_URL}
      PROMTAIL_ENABLE_TRACING: ${PROMTAIL_ENABLE_TRACING}
    hostname: replica-{{.Node.ID}}.promtail.internal
    healthcheck:
      test:
      - CMD-SHELL
      - promtail -check-syntax -config.expand-env -config.file=/etc/promtail/promtail-config.yaml
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 30s
    image: grafana/promtail:2.9.9
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      logstack_gwnetwork: null
      prometheus_gwnetwork: null
    ports:
    - mode: host
      target: 9080
      published: 19080
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
    - type: volume
      source: promtail-data
      target: /promtail
networks:
  grafana: {}
  logstack_gwnetwork:
    name: logstack_gwnetwork
    external: true
  prometheus_gwnetwork:
    name: prometheus_gwnetwork
    external: true
volumes:
  grafana-loki-data: {}
  promtail-data: {}
configs:
  gf-dashboard-logstack-dockerswarm-services-logs:
    name: gf-dashboard-logstack-dockerswarm-services-logs-v1
    file: ./grafana-loki/grafana/dashboards/logstack-dockerswarm-services-logs.json
    labels:
      io.grafana.dashboard: "true"
  gf-provisioning-datasource-grafana-loki:
    name: gf-provisioning-datasource-grafana-loki-v1
    file: ./grafana-loki/grafana/provisioning/datasources/grafana-loki.yml
    labels:
      io.grafana.provisioning.datasource: "true"
  grafana-loki-config.yaml:
    name: grafana-loki-config.yaml-v1
    file: ./grafana-loki/grafana-loki/grafana-loki-config.yaml
  grafana-loki-docker-entrypoint-shim.sh:
    name: grafana-loki-docker-entrypoint-shim.sh-v1
    file: ./grafana-loki/grafana-loki/docker-entrypoint-shim.sh
  prometheus-promtail:
    name: prometheus-promtail-v1
    file: ./promtail/prometheus/promtail.yml
    labels:
      io.prometheus.scrape_config: "true"
  promtail-config.yaml:
    name: promtail-config.yaml-v1
    file: ./promtail/promtail/promtail-config.yaml
x-default-logging:
  driver: json-file
  options:
    max-file: "5"
    max-size: 12m
x-deploy:
  placement:
    max_replicas_per_node: 1
  replicas: 1
x-grafana-subservice-deploy:
  mode: global
  placement:
    constraints:
    - node.labels.services.logstack_grafana_loki == true
x-healthcheck:
  interval: 30s
  retries: 3
  start_period: 30s
  timeout: 10s
