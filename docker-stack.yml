version: "3.12"
services:
  grafana-loki:
    configs:
    - source: gf-provisioning-datasource-grafana-loki
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
        max_replicas_per_node: 1
    environment:
      DOCKERSWARM_NODE_HOSTNAME: '{{.Node.Hostname}}'
      DOCKERSWARM_NODE_ID: '{{.Node.ID}}'
      DOCKERSWARM_SERVICE_ID: '{{.Service.ID}}'
      DOCKERSWARM_SERVICE_NAME: '{{.Service.Name}}'
      DOCKERSWARM_STACK_NAMESPACE: '{{ index .Service.Labels "com.docker.stack.namespace"}}'
      DOCKERSWARM_TASK_ID: '{{.Task.ID}}'
      DOCKERSWARM_TASK_NAME: '{{.Task.Name}}'
      DOCKERSWARM_TASK_SLOT: '{{.Task.Slot}}'
    hostname: replica-{{.Task.Slot}}.grafana-loki.local
    image: swarmlibs/grafana-loki:main
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      grafana:
        aliases:
        - grafana-loki.local
    volumes:
    - type: volume
      source: grafana-loki-data
      target: /loki
  grafana-loki-gateway:
    depends_on:
    - loki
    deploy:
      mode: global
      labels:
        io.prometheus.enabled: "true"
        io.prometheus.job_name: loki
      placement:
        constraints:
        - node.labels.services.logstack_grafana_loki == true
    environment:
      TARGET_TASK_ADDR: replica-{{.Task.Slot}}.grafana-loki.local:3100
    hostname: replica-{{.Task.Slot}}.grafana-loki-gateway.local
    image: swarmlibs/docker-task-proxy:main
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      grafana: null
      logstack_gwnetwork:
        aliases:
        - grafana-loki.local
      prometheus_gwnetwork:
        aliases:
        - grafana-loki.local
    ports:
    - target: 80
      published: 3100
  grafana-loki-promtail:
    command:
    - -ec
    - /usr/bin/promtail -server.enable-runtime-reload -config.expand-env=true -config.file=/etc/promtail/promtail-config.yaml
    configs:
    - source: promtail-config.yaml.tmpl
      target: /etc/promtail/promtail-config.yaml
    - source: prometheus-promtail
    deploy:
      mode: global
      labels:
        io.prometheus.dockerswarm-services.should_be_probed: "false"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.role: grafana-loki-promtail
      placement:
        max_replicas_per_node: 1
    entrypoint:
    - /bin/sh
    environment:
      PROMTAIL_CLIENT_TENANT_ID: ${PROMTAIL_CLIENT_TENANT_ID:-fake}
      PROMTAIL_CLIENT_URL: ${PROMTAIL_CLIENT_URL:-http://grafana-loki.local/loki/api/v1/push}
      PROMTAIL_ENABLE_TRACING: ${PROMTAIL_ENABLE_TRACING:-false}
    hostname: replica-{{.Node.ID}}.promtail.local
    image: grafana/promtail:2.9.9
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      logstack_gwnetwork:
        aliases:
        - promtail.local
      prometheus_gwnetwork:
        aliases:
        - promtail.local
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
    - type: volume
      source: promtail-data
      target: /promtail
networks:
  grafana: {}
  logstack_gwnetwork:
    name: logstack_gwnetwork
    external: true
  prometheus_gwnetwork:
    name: prometheus_gwnetwork
    external: true
volumes:
  grafana-loki-data: {}
  promtail-data: {}
configs:
  gf-provisioning-datasource-grafana-loki:
    name: gf-provisioning-datasource-grafana-loki-v1
    file: grafana-loki/grafana/grafana-loki.yml
    labels:
      io.grafana.provisioning.datasource: "true"
  prometheus-promtail:
    name: prometheus-promtail-v1
    file: grafana-loki-promtail/prometheus/promtail.yml
    labels:
      io.prometheus.scrape_config: "true"
  promtail-config.yaml.tmpl:
    name: promtail-config.yaml.tmpl-v1
    file: grafana-loki-promtail/configs/promtail-config.yaml.tmpl
x-default-logging:
  driver: json-file
  options:
    max-file: "5"
    max-size: 12m
x-deploy:
  placement:
    constraints:
    - node.role == manager
    max_replicas_per_node: 1
  replicas: 1
x-grafana-subservice-deploy:
  mode: global
  placement:
    constraints:
    - node.labels.services.logstack_grafana_loki == true
